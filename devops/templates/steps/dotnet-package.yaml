parameters:
    - name: solutionName
      type: string
    - name: solutionDirectory
      type: string
    - name: buildConfiguration
      type: string
    - name: packageId
      type: string
    - name: authors
      type: string
    - name: company
      type: string

steps:

- task: DotNetCoreCLI@2
  displayName: Restore .Net Project
  inputs:
    command: 'restore'
    projects: "${{ parameters.solutionDirectory }}/**/*.csproj"
    feedsToUse: 'select'
    includeNuGetOrg: true

- task: PowerShell@2
  displayName: Extract Build Id
  inputs:
    targetType: inline
    script: | 
      $sourceBranchName="$(Build.SourceBranchName)"
      $buildVersion=$sourceBranchName.Trim("release-v")
      echo "##vso[task.setvariable variable=buildVersionId]$buildVersion"
    
- task: DotNetCoreCLI@2
  displayName: Build & Version .Net Project
  inputs:
    command: 'build'
    projects: "${{ parameters.solutionDirectory }}/${{ parameters.solutionName }}/${{ parameters.solutionName }}.csproj"
    arguments: --configuration ${{ parameters.buildConfiguration }} /p:PackageId=${{ parameters.packageId }} /p:version=$(buildVersionId) /p:Authors="${{ parameters.authors }}" /p:Company="${{ parameters.company }}"

- task: DotNetCoreCLI@2
  displayName: Pack .Net Project
  inputs:
    command: 'pack'
    projects: "${{ parameters.solutionDirectory }}/${{ parameters.solutionName }}/${{ parameters.solutionName }}.csproj"
    configuration: ${{ parameters.buildConfiguration }}
    outputDir: "$(Build.StagingDirectory)/packages/"